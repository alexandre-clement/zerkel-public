============
Zerkel
============

********************
Tokens description
********************

*****
Usage
*****

.. code:: python

  >>> import zerkel

  >>> successor = zerkel.parse('o+II')
  >>> print(zerkel.interpret(successor, '{}'))
  {{}}
  >>> print(zerkel.interpret(successor, '{{}}'))
  {{}, {{}}}

  >>> union = zerkel.parse('oRo?<>I>>I<>I<<III')
  >>> print(zerkel.interpret(union, '{{{}}, {{{}}}}'))
  {{}, {{}}}
  >>> print(zerkel.parse('oRo?<>I>>I<>I<<III') == zerkel.parse('union'))
  True

  >>> print(zerkel.interpret('map o mult I< 5', 20))
  {45, 90, 70, 10, 25, 35, 80, 55, 50, 85, 95, 65, 60, 40, 75, 5, 15, 0, 20, 30}

  >>> for program in zerkel.generate(2, 8):
  ...   print(program)
  R>R>R>>I
  R>R>o+++
  R>R>oR++
  R>R>>R>I
  R>RR>>>I
  ...

  >>> x = [zerkel.Set.generate(i) for i in range(5)]
  >>> print(x)
  [0, 1, {1}, 2, {{1}}, {0, {1}}]
  >>> y = [zerkel.Set.generate_ordinal(i) for i in range(3)]
  [0, 1, 2]

  >>> add = zerkel.parse('add')
  >>> print(add)
  ooRo?<>I>>I<>I<<IIIoRo?>>oo+<EIooRo?<>I>>I<>I<<IIIoRo?<>oo+<EIo+II>>I<>I<<III<<o+<EI<<<E<>I<I>I

  >>> print(zerkel.table(add, x, y)
  ╒══════════╤══════════╤════════════════════╤════════════════════════════════════════╕
  │          │ 0        │ 1                  │ 2                                      │
  ╞══════════╪══════════╪════════════════════╪════════════════════════════════════════╡
  │ 0        │ 0        │ 1                  │ 2                                      │
  ├──────────┼──────────┼────────────────────┼────────────────────────────────────────┤
  │ 1        │ 1        │ 2                  │ 3                                      │
  ├──────────┼──────────┼────────────────────┼────────────────────────────────────────┤
  │ {1}      │ {1}      │ {1, {1}}           │ {{1, {1}}, 1, {1}}                     │
  ├──────────┼──────────┼────────────────────┼────────────────────────────────────────┤
  │ 2        │ 2        │ 3                  │ 4                                      │
  ├──────────┼──────────┼────────────────────┼────────────────────────────────────────┤
  │ {{1}}    │ {{1}}    │ {{{1}}, {1}}       │ {{{1}}, {1}, {{{1}}, {1}}}             │
  ├──────────┼──────────┼────────────────────┼────────────────────────────────────────┤
  │ {0, {1}} │ {0, {1}} │ {0, {0, {1}}, {1}} │ {0, {0, {1}}, {1}, {0, {0, {1}}, {1}}} │
  ╘══════════╧══════════╧════════════════════╧════════════════════════════════════════╛

  >>> print(table(parse('map mult'), range(6), range(5)))
  ╒════╤═════╤═════╤═════════════════╤══════════════════╤═══════════════════╕
  │    │ 0   │ 1   │ 2               │ 3                │ 4                 │
  ╞════╪═════╪═════╪═════════════════╪══════════════════╪═══════════════════╡
  │ 0  │ 0   │ 0   │ 0               │ 0                │ 0                 │
  ├────┼─────┼─────┼─────────────────┼──────────────────┼───────────────────┤
  │ 1  │ 1   │ 1   │ 1               │ 1                │ 1                 │
  ├────┼─────┼─────┼─────────────────┼──────────────────┼───────────────────┤
  │ 2  │ 1   │ 2   │ {0, 2}          │ {0, 3}           │ {0, 4}            │
  ├────┼─────┼─────┼─────────────────┼──────────────────┼───────────────────┤
  │ 3  │ 1   │ 3   │ {0, 2, 4}       │ {0, 3, 6}        │ {0, 8, 4}         │
  ├────┼─────┼─────┼─────────────────┼──────────────────┼───────────────────┤
  │ 4  │ 1   │ 4   │ {0, 4, 6, 2}    │ {0, 9, 3, 6}     │ {0, 8, 4, 12}     │
  ├────┼─────┼─────┼─────────────────┼──────────────────┼───────────────────┤
  │ 5  │ 1   │ 5   │ {6, 8, 4, 0, 2} │ {3, 9, 0, 6, 12} │ {8, 4, 0, 16, 12} │
  ╘════╧═════╧═════╧═════════════════╧══════════════════╧═══════════════════╛


*****
Tests
*****

.. code:: bash

  python3 -m unittest discover
